<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Archives on kbabuji</title>
    <link>http://localhost:1313/articles/</link>
    <description>Recent content in Archives on kbabuji</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 10 Nov 2024 13:22:53 -0600</lastBuildDate>
    <atom:link href="http://localhost:1313/articles/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>From Jekyll to Hugo</title>
      <link>http://localhost:1313/articles/from-jekyll-to-hugo/</link>
      <pubDate>Sun, 10 Nov 2024 13:22:53 -0600</pubDate>
      <guid>http://localhost:1313/articles/from-jekyll-to-hugo/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;http://localhost:1313/articles/from-jekyll-to-hugo/hugo-logo-wide.svg&#34;&#xA;    alt=&#34;Hugo logo&#34; width=&#34;300px&#34; height=&#34;250px&#34; loading=&#34;lazy&#34;&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;I recently moved my blog from &lt;a href=&#34;https://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt;, a Ruby-based static site generator, to &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;, a popular alternative built in Golang. In this article, I’ll walk through the rationale behind this migration, share the steps I took, and include a few custom code snippets I created along the way. This is not intended as a tutorial on setting up a blog with Hugo — there are plenty of excellent videos and documentation on &lt;a href=&#34;https://gohugo.io/documentation/&#34;&gt;Hugo’s site&lt;/a&gt; for that. Instead, I’ll focus on my experience, insights, and the lessons learned that may be helpful for anyone considering a similar transition.&lt;/p&gt;&#xA;&lt;p&gt;You could find an older version of my site at &lt;a href=&#34;https://web.archive.org/web/20200917235453/https://krispingal.github.io/&#34;&gt;archive&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Understanding Skip lists</title>
      <link>http://localhost:1313/articles/understanding-skiplists/</link>
      <pubDate>Fri, 01 Nov 2024 00:00:00 -0500</pubDate>
      <guid>http://localhost:1313/articles/understanding-skiplists/</guid>
      <description>&lt;p&gt;Suppose you have a sorted collection of elements and need to perform add, delete, and search operations efficiently. Skip lists offer an efficient, probabilistic approach to these operations, achieving an average time complexity of \(O(\log{n})\) for search, insertion, and deletion. While other data structures, such as red-black trees and AVL trees, can provide the same \(O(\log{n})\) efficiency guarantees in both the average and worst cases, skip lists have the advantage of being simpler to implement and understand.&lt;/p&gt;&#xA;&lt;p&gt;With basic data structures like sorted arrays, you can search for elements in \(O(\log{n})\) time using binary search. However, insertion and deletion require shifting elements, leading to \(O(n)\) time complexity for these operations. Conversely, linked lists allow efficient \(O(1)\) insertions and deletions once the target location is found, but finding that location requires \(O(n)\) time in the worst case.&lt;/p&gt;&#xA;&lt;h2 id=&#34;how-skip-lists-improve-efficiency&#34;&gt;&#xA;  How Skip Lists improve efficiency&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#how-skip-lists-improve-efficiency&#34; aria-label=&#34;Link to section - How Skip Lists improve efficiency&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;So, how do skip lists achieve \(O(\log{n})\) efficiency for all three operations? Skip lists accomplish this by introducing multiple levels, each serving as an &amp;ldquo;express lane&amp;rdquo; that allows you to skip over sections of the list. The highest levels contain fewer nodes, allowing you to make large jumps, while the lowest level contains all nodes, allowing for precise adjustments when needed. This structure enables fast traversal through the express lanes and, when necessary, you can exit to a lower level for finer-grained searching.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Refining Load Balancer</title>
      <link>http://localhost:1313/articles/refining-load-balancer/</link>
      <pubDate>Sat, 19 Oct 2024 00:00:00 -0500</pubDate>
      <guid>http://localhost:1313/articles/refining-load-balancer/</guid>
      <description>&lt;p&gt;In the last article, we covered the basics of building a Layer 7 load balancer in Go, touching on routing, SSL termination, and rate limiting. Since then, the focus has been on improving performance, maintainability, and scalability.&lt;/p&gt;&#xA;&lt;p&gt;This article highlights key upgrades like adopting clean architecture, switching to configuration files, and using connection pooling to enhance backend communication. These changes make the system more flexible and set the stage for even more optimizations, including advanced health checkers, which we’ll explore in the next article.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building a Layer 7 Load Balancer</title>
      <link>http://localhost:1313/articles/building-a-layer7-load-balancer/</link>
      <pubDate>Sun, 15 Sep 2024 15:05:28 -0600</pubDate>
      <guid>http://localhost:1313/articles/building-a-layer7-load-balancer/</guid>
      <description>&lt;p&gt;Load balancers are essential for applications or services that handle high volumes of traffic, ensuring that they can scale efficiently to meet demand. Modern load balancers have evolved into comprehensive traffic management solutions, often incorporating rate limiting, caching, DDoS protection, and more, making them indispensable for high-scale systems.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-is-a-load-balancer&#34;&gt;&#xA;  What is a load balancer?&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#what-is-a-load-balancer&#34; aria-label=&#34;Link to section - What is a load balancer?&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;Imagine you&amp;rsquo;re at an airport, standing in line for the security check. There is a single line of passengers, but there are five booths with agents checking boarding passes and IDs. At the front of the line, there is an agent directing passengers to available booths. This agent acts like a basic load balancer, distributing incoming requests (passengers) to backend servers (TSA agents) for processing.&lt;/p&gt;</description>
    </item>
    <item>
      <title>A guide to Neural Networks</title>
      <link>http://localhost:1313/articles/guide-to-neural-network/</link>
      <pubDate>Sun, 04 Nov 2018 00:00:00 -0500</pubDate>
      <guid>http://localhost:1313/articles/guide-to-neural-network/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;http://localhost:1313/articles/guide-to-neural-network/nn.webp&#34;&#xA;    alt=&#34;Fig 1. Neural net with Input layer ∈ ℝ16; hidden layer 1 ∈ ℝ12; hidden layer 2 ∈ ℝ10 and finally a single unit ∈ ℝ in the output layer&#34; loading=&#34;lazy&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;h4&gt;Neural Network architecture&lt;/h4&gt;&lt;p&gt;Fig 1. Neural net with Input layer ∈ ℝ&lt;!-- raw HTML omitted --&gt;16&lt;!-- raw HTML omitted --&gt;; hidden layer 1  ∈ ℝ&lt;!-- raw HTML omitted --&gt;12&lt;!-- raw HTML omitted --&gt;; hidden layer 2 ∈ ℝ&lt;!-- raw HTML omitted --&gt;10&lt;!-- raw HTML omitted --&gt; and finally a single unit ∈ ℝ in the output layer&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&#xA;  &#xA;  &#xA;    &lt;blockquote&gt;&#xA;      &lt;p&gt;TLDR:&#xA;Neural Networks are computational models that stacks units called neurons into layers to create predictions after we have trained the network. Each unit performs a linear transformation on the data followed by a non-linear transformation to produce a result. Forward propagation computes the network result and backward propagation computes the changes in weights and biases for the network in subsequent epochs. The non-linear activation function supports the network to assume any mathematical function, this is called the Universal Approximation theorem.&lt;/p&gt;&#xA;&#xA;    &lt;/blockquote&gt;&#xA;  &#xA;  &#xA;  &lt;h2 id=&#34;introduction&#34;&gt;&#xA;  Introduction&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#introduction&#34; aria-label=&#34;Link to section - Introduction&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;Every day we are relying on machine learning models to make our lives simpler and hassle-free. Take your average day, where you start, by reading news and weather predictions, or later in the day when you are checking your emails, we unconsciously are relying on machine learning models that run behind the scenes. The list goes on and on with applications in image recognition used in our gallery, audio recognition in voice assistants. This list keeps growing every day.&lt;/p&gt;&#xA;&lt;p&gt;A few popular classical Machine learning models include Logistic Regression, Linear Regression, Decision Trees, Support Vector Machines, and Naive Bayes models. Although these models are nowadays less commonly used in practice, they are still very useful as understanding them helps to understand the more recent models. Ensemble models such as Random forests and XGBoost are some machine learning models that are commonly used these days.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Topic modeling with Gensim</title>
      <link>http://localhost:1313/articles/topic-modeling-with-gensim/</link>
      <pubDate>Sun, 26 Mar 2017 00:00:00 -0500</pubDate>
      <guid>http://localhost:1313/articles/topic-modeling-with-gensim/</guid>
      <description>&lt;p&gt;I first started doing topic modeling when I used to play around with the &lt;a href=&#34;https://www.kaggle.com/benhamner/nips-papers&#34;&gt;nips dataset&lt;/a&gt;. The first time I tried it, I used scikit-learn for this. I used LDA and NMF for this, and I received results that I was happy with. In this way, I think &lt;a href=&#34;http://scikit-learn.org/stable/&#34;&gt;scikit-learn&lt;/a&gt; is one of the most appropriate tools available for exploratory data science tasks. But I had bigger plans, of tackling even bigger datasets. Then I got introduced to another python library &lt;a href=&#34;https://radimrehurek.com/gensim/index.html&#34;&gt;gensim&lt;/a&gt; which is focused on topic modeling. Among many features it provides, it includes transformations such as &lt;em&gt;online&lt;/em&gt; LDA, LSA and HDP, and wrappers to other popular libraries like scikit-learn, &lt;a href=&#34;http://hunch.net/~vw/&#34;&gt;vowpal wabbit&lt;/a&gt;, and &lt;a href=&#34;http://mallet.cs.umass.edu/&#34;&gt;Mallet&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;The code can be viewed at my &lt;a href=&#34;https://github.com/krispingal/topic_modeling&#34;&gt;Github repository&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Shelter Animal Outcomes</title>
      <link>http://localhost:1313/articles/shelter-animal-outcomes/</link>
      <pubDate>Wed, 24 Aug 2016 04:14:54 -0800</pubDate>
      <guid>http://localhost:1313/articles/shelter-animal-outcomes/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;http://localhost:1313/articles/shelter-animal-outcomes/puppy.webp&#34; loading=&#34;lazy&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;h4&gt;A puppy taken in at a shelter&lt;/h4&gt;&lt;p&gt;&#xA;          &lt;a href=&#34;https://www.flickr.com/photos/pifaslt/&#34;&gt;Picture taken from SOS&lt;/a&gt;&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.kaggle.com/c/shelter-animal-outcomes&#34;&gt;Shelter animal outcomes&lt;/a&gt; is a knowledge&#xA;competition hosted by &lt;a href=&#34;https://www.kaggle.com/&#34;&gt;kaggle&lt;/a&gt;. My goal was to learn and get&#xA;familiarized with the different techniques, methods and tools required to&#xA;solve classification problems. In my adventures I used &lt;a href=&#34;http://pandas.pydata.org/&#34;&gt;pandas&lt;/a&gt;,&#xA;&lt;a href=&#34;http://matplotlib.org/&#34;&gt;matplotlib&lt;/a&gt;, &lt;a href=&#34;https://stanford.edu/~mwaskom/software/seaborn/index.html&#34;&gt;seaborn&lt;/a&gt;, &lt;a href=&#34;http://jupyter.org/&#34;&gt;jupyter&lt;/a&gt; and&#xA;&lt;a href=&#34;http://scikit-learn.org/stable/index.html&#34;&gt;scikit-learn&lt;/a&gt;. The goal of this competition&#xA;is to predict the outcome of a cat or a dog, given it&amp;rsquo;s age, gender(also&#xA;whether spayed/neutered or not), breed, color. The outcomes are&#xA;return-to-owner, adoption, transfer, euthanasia and died. In some cases&#xA;we are provided with outcome subtypes too.&lt;/p&gt;&#xA;&lt;p&gt;All my work related to this can be found in this&#xA;&lt;a href=&#34;https://github.com/krispingal/shelterAnimalOutcomes&#34;&gt;github repository&lt;/a&gt;, it houses my jupyter notebooks.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
